2015-08-04 13:34:07 [program started on Tue Aug  4 13:34:07 2015] 
2015-08-04 13:34:07 [command line arguments] 
2015-08-04 13:34:07 LR 0.01 
2015-08-04 13:34:07 LRDecay 0 
2015-08-04 13:34:07 network ./Models/AlexNet_BN 
2015-08-04 13:34:07 optState false 
2015-08-04 13:34:07 save /home/ma/feng/proj/fg_elad/Results/TueAug413:34:052015 
2015-08-04 13:34:07 load  
2015-08-04 13:34:07 nGPU 1 
2015-08-04 13:34:07 testonly false 
2015-08-04 13:34:07 modelsFolder ./Models/ 
2015-08-04 13:34:07 momentum 0.9 
2015-08-04 13:34:07 checkpoint 0 
2015-08-04 13:34:07 type cuda 
2015-08-04 13:34:07 devid 1 
2015-08-04 13:34:07 batchSize 256 
2015-08-04 13:34:07 epoch -1 
2015-08-04 13:34:07 threads 8 
2015-08-04 13:34:07 optimization sgd 
2015-08-04 13:34:07 weightDecay 0.0005 
2015-08-04 13:34:07 shuffle true 
2015-08-04 13:34:07 constBatchSize false 
2015-08-04 13:34:07 bufferSize 1280 
2015-08-04 13:34:07 [----------------------] 
2015-08-04 13:34:08 ==> Network 
2015-08-04 13:34:08 nn.Sequential {
  [input -> (1) -> (2) -> output]
  (1): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): cudnn.SpatialConvolution(3 -> 64, 11x11, 4,4, 2,2)
    (2): cudnn.SpatialMaxPooling
    (3): cudnn.ReLU
    (4): nn.SpatialBatchNormalization
    (5): cudnn.SpatialConvolution(64 -> 192, 5x5, 1,1, 2,2)
    (6): cudnn.SpatialMaxPooling
    (7): cudnn.ReLU
    (8): nn.SpatialBatchNormalization
    (9): cudnn.SpatialConvolution(192 -> 384, 3x3, 1,1, 1,1)
    (10): cudnn.ReLU
    (11): nn.SpatialBatchNormalization
    (12): cudnn.SpatialConvolution(384 -> 256, 3x3, 1,1, 1,1)
    (13): cudnn.ReLU
    (14): nn.SpatialBatchNormalization
    (15): cudnn.SpatialConvolution(256 -> 256, 3x3, 1,1, 1,1)
    (16): cudnn.SpatialMaxPooling
    (17): cudnn.ReLU
    (18): nn.SpatialBatchNormalization
  }
  (2): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> output]
    (1): nn.View
    (2): nn.Dropout(0.500000)
    (3): nn.Linear(9216 -> 4096)
    (4): nn.Threshold
    (5): nn.BatchNormalization
    (6): nn.Dropout(0.500000)
    (7): nn.Linear(4096 -> 4096)
    (8): nn.Threshold
    (9): nn.BatchNormalization
    (10): nn.Linear(4096 -> 1000)
    (11): nn.LogSoftMax
  }
} 
2015-08-04 13:34:08 ==>61100840 Parameters 
2015-08-04 13:34:08 ==> Loss 
2015-08-04 13:34:08 nn.ClassNLLCriterion 
2015-08-04 13:34:09 
Epoch 1 
2015-08-04 13:34:13 #1    function optimize(self, x, yt) @/home/ma/feng/tool/eladtools/Optimizer.lua:53 
2015-08-04 13:34:15 
 256
   3
 224
 224
[torch.LongStorage of size 4]
 
2015-08-04 13:34:20 256 
2015-08-04 13:34:25 256 
